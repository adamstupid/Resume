{
  "version": 3,
  "sources": ["../../node_modules/svelte/internal/index.mjs", "../../src/name_card.svelte", "../../src/project.svelte", "../../src/experience.svelte", "../../src/side_project.svelte", "../../src/skill.svelte", "../../src/skills.svelte", "../../src/education.svelte", "../../src/app.svelte", "../../src/index.js"],
  "sourcesContent": ["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro \u2014 we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro \u2014 needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n", "\n\n<div class=\"name_card\">\n\t<div class=\"left\">\n\t\t<h1 class=\"name\">\u6768\u8FDB\u96C4</h1>\n\t\t<p class=\"job_title\">\u6570\u636E\u5F00\u53D1\u5DE5\u7A0B\u5E08</p>\n\t\t<div class=\"contact\">\n\t\t\t<p id=\"phone\">13076583193</p>\t\n\t\t\t<p id=\"email\">pensiveadam@gmail.com</p>\n\t\t</div>\n\t</div>\n\t<div class=\"right\">\n\t\t<img class=\"avatar\" alt=\"avatar\"/>\n\t</div>\n</div>\n\n<style type=\"text/css\">\n\t.name_card {\n\t\twidth: 80%;\n\t\theight: auto;\n\t\tpadding: 2em;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t}\n\n\th1 {\n\t\tfont-size: 2.0em;\n\t}\n\n\t.job_title {\n\t\tfont-weight: bold;\n\t\tletter-spacing: 3px;\n\t\tpadding-left: 1em;\n\t\tpadding-top: 0.3em;\n\t}\n\n\t.contact {\n\t\tpadding: 0.8em;\n\t\tposition: relative;\n\t\tleft: -5px;\n\t}\n\n\t#phone::before {\n\t\tcontent: '\uD83D\uDCF1';\n\t}\n\n\t#email::before {\n\t\tcontent: '\uD83D\uDCED';\n\t}\n\n\t.right {\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tborder: 2px black dashed;\n\t\tborder-radius: 5px;\n\t\tbox-shadow: 5px 5px lightslategrey;\n\t}\n</style>\n", "<script>\n\texport let project;\n</script>\n\n<div class=\"project\">\n\t<div class=\"project_meta\">\n\t\t<span class=\"project_name\">{ project.project_name }</span>\n\t\t{#if project.project_description }\n\t\t\t<span>: </span>\n\t\t\t<p class=\"project_description\">{ project.project_description }</p>\n\t\t{/if}\n\t\t<ul class=\"achievements\">\n\t\t\t{#each project.achievements as achievement}\n\t\t\t\t<p class=\"achievement\">{ achievement }</p>\n\t\t\t{/each}\n\t\t</ul>\n\t</div>\n</div>\n\n<style>\n\t.project {\n\t\tletter-spacing: 1px;\n\t}\n\n\t.project:not(first-child) {\n\t\tmargin-top: 20px;\n\t}\n\n\t.project_name {\n\t\t/*font-size: 1.1em;*/\n\t\tfont-weight: bold;\n\t}\n\n\t.project_description {\n\t\tdisplay: inline;\n\t\tmargin-left: 2px;\n\t}\n\n\t.project_description {\n\t\tmargin-left: 15px;\n\t}\n\n\t.achievements {\n\t\tpadding-left: 2em;\n\t}\n\n\t.achievement {\n\t\tmargin-top: 6px;\n\t}\n</style>\n\n\n\n", "<script>\n\timport Project from \"./project.svelte\";\n\n\n\tlet experiences = [\n\t\t{\n\t\t\t\"from\": \"2021-10\",\n\t\t\t\"to\": \"2023-08\",\n\t\t\t\"company\": {\n\t\t\t\t\"company_name\": \"\u62DB\u5546\u57FA\u91D1\u7BA1\u7406\u6709\u9650\u516C\u53F8\",\n\t\t\t\t\"company_site\": \"http://www.cmfchina.com/\"\n\t\t\t},\n\t\t\t\"position\": \"\u6570\u636E\u5F00\u53D1\u5DE5\u7A0B\u5E08\",\n\t\t\t\"projects\": [\n\t\t\t\t{\n\t\t\t\t\t\"project_name\": \"\u4EBA\u6C11\u94F6\u884C\u8D44\u7BA1\u62A5\u9001\u9879\u76EE\u7EF4\u62A4\",\n\t\t\t\t\t\"achievements\": [\n\t\t\t\t\t\t\"\u7EF4\u62A4\u62A5\u9001\u671F\u95F4\u5185\u65B0\u6210\u7ACB\u4EA7\u54C1\uFF0C\u65B0\u589E\u8D44\u4EA7\uFF0C\u65B0\u589E\u4EA4\u6613\u5BF9\u624B\u7B49\u624B\u5DE5\u4FE1\u606F, \u8DDF\u8FDB\u62A5\u9001\u7ED3\u679C\",\n\t\t\t\t\t\t\"\u6C9F\u901A\u65B0\u7684\u6307\u6807\u8BA1\u7B97\u903B\u8F91, \u66F4\u65B0(\u56DE\u9000)\u9879\u76EE\u4EE3\u7801, \u6D4B\u8BD5\u9A8C\u8BC1\u6307\u6807\u8BA1\u7B97\u7ED3\u679C,  \u540C\u6B65\u6307\u6807\u8BA1\u7B97mapping\u6587\u6863\",\n\t\t\t\t\t\t\"\u4E3A\u4E0D\u540C\u90E8\u95E8\u62A5\u9001\u6570\u636E\u9A8C\u8BC1\u63D0\u4F9B\u6307\u6807\u8BA1\u7B97\u7684\u660E\u7EC6\u6570\u636E\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"project_name\": \"\u4EBA\u6C11\u94F6\u884C\u8D44\u7BA1\u62A5\u9001\u9879\u76EE\u4EE3\u7801\u8FED\u4EE3\", \n\t\t\t\t\t\"project_description\": \"\u73B0\u6709\u8D44\u7BA1\u62A5\u9001\u63A5\u53E3\u5B58\u5728\u5E95\u5C42\u6570\u636E\u4F9D\u8D56\u9648\u65E7,\u4EE3\u7801\u7EF4\u62A4\u548Cdebug\u56F0\u96BE\uFF0C\u4EE3\u7801\u5197\u6742\uFF0C\u63A5\u53E3\u67E5\u8BE2\u901F\u5EA6\u6162\uFF0C \u8F93\u51FA\u7ED3\u679C\u51FA\u9519\u7387\u9AD8\u7B49\u95EE\u9898, \u9700\u8981\u7ED3\u5408\u73B0\u6709\u6570\u636E\u6A21\u578B\u5C42\u5BF9\u9879\u76EE\u4EE3\u7801\u8FDB\u884C\u7CFB\u7EDF\u6027\u6539\u9020\",\n\t\t\t\t\t\"achievements\": [\n\t\t\t\t\t\t\"\u6C9F\u901A\u9879\u76EE\u4EE3\u7801\u8FED\u4EE3\u76EE\u6807\uFF0C\u5305\u62EC\u964D\u4F4E\u8F93\u51FA\u62A5\u8868\u6570\u636E\u94A9\u7A3D\u5931\u8D25\u7387, \u63D0\u5347\u4EE3\u7801\u53EF\u7EF4\u62A4\u6027\uFF0C \u5B9E\u73B0\u4EE3\u7801\u5E95\u5C42\u6570\u636E\u4F9D\u8D56\u8FC1\u79FB, \u964D\u4F4E\u6307\u6807\u660E\u7EC6\u6570\u636E\u63D0\u53D6\u96BE\u5EA6, \u7A0B\u5E8F\u6267\u884C\u901F\u5EA6\u4F18\u5316, \u73B0\u6709\u7A0B\u5E8F\u63A5\u53E3\u65E0\u7F1D\u5207\u6362\",\n\t\t\t\t\t\t\"\u6574\u7406\u62A5\u9001\u9879\u76EE\u4E2D\u62A5\u9001\u533A\u95F4\uFF0C\u4EA7\u54C1\u8303\u56F4\uFF0C\u4EA7\u54C1\u7EF4\u5EA6\u4FE1\u606F\u53CA\u6307\u6807\uFF0C\u4EA7\u54C1\u6301\u6709\u7684\u8D44\u4EA7\u7EF4\u5EA6\u4FE1\u606F\u53CA\u6307\u6807\u7B49\u8BA1\u7B97\u903B\u8F91,  \u8BBE\u8BA1\u89E3\u8026\u7684\u62A5\u8868\u4E2D\u95F4\u5C42\uFF0C \u4E3A\u540E\u671F\u62A5\u8868\u8F93\u51FA\u63A5\u53E3\u5F00\u53D1\u63D0\u4F9B\u7EDF\u4E00\u7684\u6307\u6807\u8BA1\u7B97\u7ED3\u679C\",\n\t\t\t\t\t\t\"\u62A5\u8868\u4E2D\u95F4\u5C42\u52A0\u8F7D\u7A0B\u5E8F\u5B9E\u65BD\uFF0C \u4E0B\u6E38\u62A5\u9001\u63A5\u53E3\u7A0B\u5E8F\u5B9E\u65BD\uFF0C \u62A5\u8868\u95F4\u7A3D\u6838\u7A0B\u5E8F\u5B9E\u65BD\",\n\t\t\t\t\t\t\"\u65B0\u589E\u6D4B\u8BD5\u7A3D\u6838\u76D1\u63A7\u7A0B\u5E8F\uFF0C\u4FDD\u8BC1\u62A5\u9001\u63A5\u53E3\u8F93\u51FA\u7B26\u5408\u62A5\u9001\u6240\u6709\u7A3D\u6838\u89C4\u5219\u3002\u6BD4\u5BF9\u4E4B\u524D\u7684\u62A5\u9001\u6570\u636E\uFF0C\u786E\u4FDD\u73B0\u6709\u7684\u6307\u6807\u8BA1\u7B97\u7ED3\u679C\u548C\u4E4B\u524D\u4E00\u81F4\",\n\t\t\t\t\t\t\"\u5B8C\u5584\u5F00\u53D1\u6587\u6863, \u4E3A\u540E\u7EED\u5F00\u53D1\u7EF4\u62A4\u548C\u95EE\u9898\u5B9A\u4F4D\u63D0\u4F9B\u652F\u6301\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"project_name\": \"\u5176\u4ED6\", \n\t\t\t\t\t\"achievements\": [\n\t\t\t\t\t\t\"\u54CD\u5E94\u5176\u4ED6\u4EA7\u54C1\u65B0\u589E\u62A5\u8868\u5F00\u53D1\u9700\u6C42, \u5305\u62EC\u9700\u6C42\u6838\u5BF9\uFF0C\u6570\u636E\u63A5\u53E3\u5F00\u53D1\uFF0C\u524D\u7AEF\u5C55\u793A\u6A21\u677F\u914D\u7F6E, \u6570\u636E\u6838\u9A8C\u6D4B\u8BD5\u7B49\u4EFB\u52A1\",\n\t\t\t\t\t\t\"\u517B\u8001\u91D1\u53CA\u4F01\u4E1A\u5E74\u91D1\u7684\u62A5\u8868\u8FC1\u79FB\u9700\u6C42\uFF0C\u5B8C\u5584\u73B0\u6709\u62A5\u8868\u5C42\u6307\u6807\u63A5\u53E3\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"from\": \"2019-10\",\n\t\t\t\"to\": \"2021-08\",\n\t\t\t\"company\": {\n\t\t\t\t\"company_name\": \"\u4FE1\u5FC5\u4F18(\u6DF1\u5733)\u4FE1\u606F\u6280\u672F\u6709\u9650\u516C\u53F8\",\n\t\t\t\t\"company_site\": \"http://symbio.com.cn/\"\n\t\t\t},\n\t\t\t\"position\": \"\u6570\u636E\u5F00\u53D1\u5DE5\u7A0B\u5E08\",\n\t\t\t\"projects\": [\n\t\t\t\t{\n\t\t\t\t\t\"project_name\": \"\u5C0F\u989D\u91D1\u878D\u8D37\u6B3E\u98CE\u9669\u8BC4\u4F30\u62A5\u544A\u9879\u76EE\",\n\t\t\t\t\t\"project_description\": \"\u9488\u5BF9\u5BA2\u6237\u53CA\u4EA7\u54C1\u7EF4\u5EA6, \u4E3A\u4F01\u4E1A\u63D0\u4F9B\u8D37\u6B3E\u4E1A\u52A1\u6B3E\u9879\u5206\u5E03, \u903E\u671F\u60C5\u51B5\u7B49\u6307\u6807\u72B6\u51B5\u63CF\u8FF0\u3002\u6DF1\u5165\u7814\u7A76\u4E0D\u540C\u501F\u8D37\u4EA7\u54C1\u4E0B(\u8D37\u6B3E\u8BC4\u7EA7, \u5229\u7387, \u8D37\u6B3E\u91D1\u989D \u548C\u8D37\u6B3E\u5468\u671F), \u4E0D\u540C\u7C7B\u578B\u5BA2\u6237(\u4EBA\u53E3\u7EDF\u8BA1\u4FE1\u606F,\u5F81\u4FE1,\u5DE5\u4F5C\u6536\u5165)\u5177 \u4F53\u7528\u6237\u753B\u50CF\u3002\u901A\u8FC7\u591A\u7EF4\u5EA6\u6307\u6807\u63CF\u8FF0, \u4E3A\u5BA2\u6237\u8BC4\u9009, \u4EA7\u54C1\u4F18\u5316, \u6B3E\u9879\u5206\u5E03\u7B56\u7565\u7B49\u63D0\u4F9B\u51B3\u7B56\u652F\u6301, \u63D0\u5347\u6574\u4F53\u4E1A\u52A1\u7A33\u5065\u6027\",\n\t\t\t\t\t\"achievements\": [\n\t\t\t\t\t\t\"\u4F7F\u7528kettle\u6839\u636E\u9879\u76EE\u9700\u6C42\u4ECE\u5404\u6E90\u7CFB\u7EDF\u62BD\u53D6\u6570\u636E\u540C\u6B65\u6570\u636E\u5E93\",\n\t\t\t\t\t\t\"\u5BF9\u6765\u6E90\u6570\u636E\u8FDB\u884C\u6570\u636E\u6E05\u7406\u53CA\u7EDF\u4E00\u53E3\u5F84\u548C\u6570\u636E\u6620\u5C04,\u5728 oracle \u4E2D\u5EFA\u7ACB\u7EDF\u4E00ods\u5C42\",\n\t\t\t\t\t\t\"\u7F16\u5199\u5B58\u50A8\u8FC7\u7A0B\u5B9E\u73B0dw \u5C42\u5BA2\u6237\u8FD8\u6B3E\u60C5\u51B5,\u90E8\u5206\u4EA7\u54C1\u7EF4\u5EA6\u62C9\u94FE\u8868\u66F4\u65B0\",\n\t\t\t\t\t\t\"\u6839\u636E\u9700\u6C42\u6587\u6863\u7F16\u5199\u6D4B\u8BD5\u5404\u7EF4\u5EA6\u6307\u6807, \u8865\u5145mapping\u6587\u6863, \u65B9\u4FBF\u4E0B\u6E38\u62A5\u8868\u63A5\u53E3\u7684\u5F00\u53D1\",\n\t\t\t\t\t\t\"\u54CD\u5E94\u5176\u4ED6\u4E34\u65F6\u53D6\u6570\u9700\u6C42\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"project_name\": \"\u5C0F\u989D\u91D1\u878D\u8D37\u6B3E\u98CE\u9669\u8BC4\u4F30\u9879\u76EE\u5927\u6570\u636E\u6539\u9020\",\n\t\t\t\t\t\"project_description\": \"\u5C06\u5C0F\u989D\u91D1\u878D\u8D37\u6B3E\u9879\u76EE\u79FB\u690D\u5230hadoop\u7CFB\u7EDF ,\u5229\u7528hdfs\u5206\u5E03\u5F0F\u5B58\u50A8\u548Chive\u8BA1\u7B97\u7CFB\u7EDF, \u63D0\u5347\u5B58\u50A8\u7A33\u5B9A\u6027,\u63D0\u9AD8\u8BA1\u7B97\u6548\u7387\",\n\t\t\t\t\t\"achievements\": [\n\t\t\t\t\t\t\"\u6839\u636E\u9879\u76EE\u6587\u6863\u4F7F\u7528hive \u5EFA\u7ACB ods \u5C42\u5404\u8868, \u68C0\u67E5\u5E76\u786E\u4FDD\u6570\u636E\u6620\u5C04\u7C7B\u578B\uFF0C\u5206\u533A\u7B49\u670D\u4ECE\u6587\u6863\u7EA6\u675F\",\n\t\t\t\t\t\t\"\u5229\u7528 sqoop, python \u5EFA\u7ACB\u6570\u636E\u62BD\u53D6\u540C\u6B65\u4EFB\u52A1\"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t];\n</script>\n\n\n<h1>\u5DE5\u4F5C\u7ECF\u5386</h1>\n<div class=\"work_experiences\">\n\t{#each experiences as { from, to, company, position, projects }}\n\t\t<div class=\"experience\">\n\t\t\t<div class=\"experience_meta\">\n\t\t\t\t<p class=\"duration\">\n\t\t\t\t\t<span class=\"time from\">{ from }</span>\n\t\t\t\t\t<span>  -  </span>\n\t\t\t\t\t<span class=\"time to\">{ to }</span>\n\t\t\t\t</p>\n\t\t\t\t<div class=\"company\">\n\t\t\t\t\t<a href=\"{ company.company_site }\">{ company.company_name }</a>\t\n\t\t\t\t</div>\n\t\t\t\t<p class=\"position\">{ position }</p>\t\t\t\t\n\t\t\t</div>\n\t\t\t<div class=\"projects\">\n\t\t\t\t{#each projects as project}\n\t\t\t\t\t<Project project={project}/>\n\t\t\t\t{/each}\n\t\t\t</div>\n\t\t</div>\n\t{/each}\n</div>\n\n<style>\n\th1 {\n\t\tfont-size: 1.5em;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 2px;\n\t\tpadding-bottom: 7px;\n\t\tborder-bottom: 2px double black;\n\t\twidth: 80%;\n\t}\n\n\t.experience:not(last-child) {\n\t\tmargin-bottom: 30px;\n\t}\n\n\t.experience_meta {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\tpadding: 10px;\n\t}\n\n\t.company {\n\t\ttext-decoration: underline;\n\t}\n\n\t.projects {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-wrap: nowrap;\n\t\tcolumn-gap: 2em;\t\n\t}\n\n\n</style>\n\n\n\n", "\n<script>\n\timport Project from \"./project.svelte\";\n\tlet side_projects = [\n\t\t{\n\t\t\t\"project_name\": \"\u5B9E\u4E60\u50E7\u62DB\u8058\u4FE1\u606F\u68C0\u7D22\u722C\u53D6\u53CA\u6982\u51B5\u7EDF\u8BA1\u62A5\u544A\",\n\t\t\t\"project_description\": \"\u6839\u636E\u804C\u4F4D\u540D\u79F0, \u85AA\u8D44, \u5DE5\u4F5C\u5730\u70B9\u53CA\u53D1\u5E03\u65F6\u95F4\u7B49\u8981\u6C42\u7B5B\u9009\u5E76\u6536\u96C6\u5E73\u53F0\u62DB\u8058\u53CA\u4F01\u4E1A\u4FE1\u606F, \u6E05\u7406\u5E76\u5BFC\u51FA\u6570\u636E\u8868\u683C, \u901A\u8FC7\u6A21\u677F\u4EA7\u51FA\u7B80\u6613\u5206\u6790\u62A5\u544A\",\n\t\t\t\"achievements\": [\n\t\t\t\t\"\u901A\u8FC7http\u6A21\u5757\u5EFA\u7ACB\u7F51\u9875\u83B7\u53D6api\u5B9E\u73B0\u5BF9\u7F51\u7AD9\u7F51\u9875\u5B9A\u5411\u83B7\u53D6\",\n\t\t\t\t\"\u6839\u636E\u7F51\u9875\u683C\u5F0F\u901A\u8FC7xpath\u4ECE\u7F51\u9875\u62BD\u53D6\u5E76\u6E05\u7406\u6240\u9700\u4FE1\u606F, \u4EA7\u751F\u5E76\u63D0\u4EA4\u65B0\u7684\u722C\u53D6\u4EFB\u52A1\",\n\t\t\t\t\"\u5EFA\u7ACB\u7B80\u6613\u5F02\u6B65\u591A\u7EBF\u7A0B\u722C\u53D6\u4EFB\u52A1\u5DE5\u4F5C\u6D41, \u7BA1\u7406\u722C\u53D6\u5DE5\u4F5C\u6267\u884C, \u5B9E\u73B0\u5931\u8D25\u91CD\u542F, backoff, \u5FAA\u73AF\u68C0\u6D4B\u7B49\u5DE5\u4F5C\u7B56\u7565\",\n\t\t\t\t\"\u901A\u8FC7 ip \u670D\u52A1\u5668\u5B9E\u73B0\u591Aip\u4E0B\u7F51\u9875\u4E0B\u8F7D\",\n\t\t\t\t\"\u5EFA\u7ACB\u62A5\u544A\u6A21\u677F\u9488\u5BF9\u85AA\u8D44\u5206\u5E03, \u7ECF\u9A8C\u53CA\u6280\u80FD\u9700\u6C42, \u5DE5\u4F5C\u5730\u70B9\u8FDB\u884C\u591A\u7EF4\u5EA6\u4EA4\u53C9\u5206\u6790\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"project_name\": \"\u5E38\u89C1\u673A\u5668\u5B66\u4E60\u7B97\u6CD5\u5B9E\u73B0(\u591A\u7EBF\u7A0B\u4F18\u5316)\",\n\t\t\t\"project_description\": \"\u901A\u8FC7julia.Threads, \u5B9E\u73B0cart, adaboost, randomforest, knn(ball-tree, birch-tree), k-means\u7B49\u7B97\u6CD5\u6A21\u578B\",\n\t\t\t\"achievements\": []\n\t\t}\n\t]\n</script>\n\n<div class=\"side_projects\">\n\t<h1 class=\"header\">\u5176\u4ED6\u9879\u76EE</h1>\n\t{#each side_projects as side_project}\n\t\t<Project project={ side_project } />\n\t{/each}\n</div>\n\n<style>\n\th1 {\n\t\tfont-size: 1.5em;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 2px;\n\t\tpadding-bottom: 7px;\n\t\tborder-bottom: 2px double black;\n\t\twidth: 80%;\n\t}\n\n\t.side_projects {\n\t\tmargin-top: 30px;\n\t}\n</style>\n\n\n\n\n", "\n<script>\n\texport let skill;\n</script>\n\n<div class=\"skill\">\n\t<div class=\"description\">{ skill.skill_description }</div>\n\t<ul class=\"stacks\">\n\t\t{#each skill.skill_stacks as stack}\n\t\t\t<li class=\"stack\">{ stack }</li>\n\t\t{/each}\n\t</ul>\n</div>\n\n<style>\n\t.skill {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 2fr 1fr;\n\t\tcolumn-gap: 40px;\n\t\talign-items: center;\n\t}\n\n\t.stacks {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: wrap;\n\t}\n\n\t.stack {\n\t\tpadding: 0.1em 1em 0.1em 1em;\n\t}\n\n\t.description {\n\t\tletter-spacing: 1px;\n\t}\n</style>\n", "\n<script>\n\timport Skill from \"./skill.svelte\";\n\n\tlet skills = [\n\t\t{\n\t\t\t\"skill_description\": \"\u719F\u6089\u5E38\u7528\u5173\u7CFB\u578B\u6570\u636E\u5E93, \u5BF9\u6570\u636E\u5E93\u8F6F\u4EF6\u5B9E\u73B0 \u548C\u4F18\u5316\u539F\u7406\u6709\u57FA\u672C\u7406\u89E3, \u80FD\u719F\u7EC3\u7F16\u5199\u590D\u6742 sql, \u51FD\u6570\u53CA\u5B58\u50A8\u8FC7\u7A0B\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"oracle(plsql)\", \n\t\t\t\t\"mysql\", \n\t\t\t\t\"postgresql(pgsql)\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"skill_description\": \"\u5BF9 hadoop \u53CA\u5176\u751F\u6001\u7CFB\u7EDF\u6709\u57FA\u672C\u8BA4\u8BC6,\u4E86\u89E3\u5206\u5E03\u5F0F\u6570\u636E\u5B58\u50A8\u548C\u79BB\u7EBF\u5904\u7406\u6280\u672F\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"HDFS\", \n\t\t\t\t\"hive\", \n\t\t\t\t\"spark\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"skill_description\": \"\u4E86\u89E3\u5206\u5E03\u5F0F\u6D88\u606F\u961F\u5217\u548C\u5B9E\u65F6\u6570\u636E\u5904\u7406\u6280\u672F\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"kafka\",\n\t\t\t\t\"flink\",\n\t\t\t\t\"zeromq\",\n\t\t\t\t\"raft\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"skill_description\": \"\u719F\u7EC3\u4F7F\u7528dataframe\u64CD\u4F5C\u7528\u4E8E\u6570\u636E\u6E05\u6D17, \u8F6C\u6362\u548C\u7EDF\u8BA1\u63CF\u8FF0\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"Pandas\",\n\t\t\t\t\"DataFrames.jl\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"skill_description\": \"\u5BF9\u6570\u636E\u53EF\u89C6\u5316\u53CA\u62A5\u8868\u5236\u4F5C\u6709\u6DF1\u5165\u8BA4\u8BC6, \u719F\u6089 \u5E38\u7528\u62A5\u8868\u53CA\u6570\u636E\u53EF\u89C6\u5316\u5DE5\u5177, \u719F\u6089svg \u77E2\u91CF\u56FE\u683C\u5F0F, \u4E86\u89E3 opengl\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"tableau\", \n\t\t\t\t\"finereport\", \n\t\t\t\t\"matplotlib\", \n\t\t\t\t\"Plots.jl\",\n\t\t\t\t\"Makie.jl\",\n\t\t\t\t\"layercake.js\"\n\t\t\t]\n\t\t},\n\t\t// {\n\t\t// \t\"skill_description\": \"\u5BF9\u6570\u636E\u6A21\u578B\u5EFA\u7ACB\u53CA\u4F18\u5316\u6709\u5E7F\u6CDB\u8BA4\u8BC6\u548C\u81EA\u5DF1\u7684\u7406\u89E3(\u4F20\u7EDF\u7EDF\u8BA1\u6A21\u578B,\u673A\u5668\u5B66\u4E60\u6A21\u578B\u7B97\u6CD5,\u6DF1\u5EA6\u5B66\u4E60,\u8D1D\u53F6\u65AF\u6A21\u578B mcmc,\u53CA\u4E0D\u540C\u6A21\u578B\u7EC4\u5408\u4EA4\u4E92), \u4F7F\u7528\u548C\u7814\u7A76\u8FC7\u591A\u79CD\u6A21\u578B\u5DE5\u5177\u53CA\u5176\u6E90\u7801\",\n\t\t// \t\"skill_stacks\": [\n\t\t// \t\t\"Numpy\", \n\t\t// \t\t\"Scikitlearn\", \n\t\t// \t\t\"PyTorch\", \n\t\t// \t\t\"GLM.jl\", \n\t\t// \t\t\"GaussianProcess.jl\", \n\t\t// \t\t\"Flux.jl\", \n\t\t// \t\t\"Zygote.jl\", \n\t\t// \t\t\"Gen.jl\"\n\t\t// \t]\n\t\t// },\n\t\t{\n\t\t\t\"skill_description\": \"\u5BF9\u8BA1\u7B97\u673A\u6280\u672F\u539F\u7406\u6709\u5E7F\u6CDB\u7684\u63A5\u89E6(\u64CD\u4F5C\u7CFB\u7EDF, \u7F16\u8BD1\u539F\u7406, \u7F51\u7EDC), \u63A2\u7D22\u4F7F\u7528\u8FC7\u591A\u79CD\u7F16\u6210\u8BED\u8A00, \u4E86\u89E3\u4E0D\u540C\u7F16\u7A0B\u601D\u60F3\",\n\t\t\t// \"skill_description\": \"\u5BF9\u8BA1\u7B97\u673A\u79D1\u5B66\u591A\u65B9\u9762\u539F\u7406\u6709\u5E7F\u6CDB\u7684\u63A5\u89E6(\u64CD\u4F5C\u7CFB\u7EDF, \u7F16\u8BD1\u539F\u7406, \u7F51\u7EDC, MPI), \u719F\u6089\u4E0D\u540C\u7F16\u7A0B\u601D\u60F3, \u63A2\u7D22\u4F7F\u7528\u8FC7\u591A\u79CD\u7F16\u7A0B\u8BED\u8A00\",\n\t\t\t\"skill_stacks\": [\n\t\t\t\t\"Julia\", \n\t\t\t\t\"Java\",\n\t\t\t\t\"Python\",\n\t\t\t\t\"javascript/typescript\", \n\t\t\t\t\"Scala\", \n\t\t\t\t\"C\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"skill_description\": \"\u82F1\u8BED\u542C\u8BF4\u8BFB\u5199\u6D41\u5229, \u80FD\u4EE5\u82F1\u8BED\u4F5C\u4E3A\u4E3B\u8981\u5DE5\u4F5C\u8BED\u8A00\",\n\t\t\t\"skill_stacks\": [\"\u5927\u5B66\u82F1\u8BED6\u7EA7\"]\n\t\t}\n\t]\n</script>\n\n\n<div class=\"skills\">\n\t<h1>\u6280\u672F\u80FD\u529B</h1>\n\t<ul class=\"skill_sets\">\n\t\t{#each skills as skill}\t\n\t\t\t<li class=\"skill_set\">\n\t\t\t\t<Skill { skill } />\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n</div>\n\n<style>\n\t.skills {\n\t\tmargin-top: 30px;\n\t}\n\n\th1 {\n\t\tfont-size: 1.5em;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 2px;\n\t\tpadding-bottom: 7px;\n\t\tborder-bottom: 2px double black;\n\t\twidth: 80%;\n\t}\n\n\t.skill_sets {\n\t\tmargin-top: 20px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-wrap: nowrap;\n\t}\n\n\t.skill_set:not(last-child) {\n\t\tmargin-bottom: 30px;\n\t}\n</style>\n", "\n<div class=\"education\">\n\t<h1>\u6559\u80B2\u80CC\u666F</h1>\n\t<div class=\"education_info\">\n\t\t<p class=\"school\">\u5E7F\u4E1C\u5916\u8BED\u5916\u8D38\u5927\u5B66</p>\n\t\t<div class=\"duration\">\n\t\t\t<span class=\"from\">2015-09</span>\n\t\t\t<span>  -  </span>\n\t\t\t<span class=\"to\">2019-06</span>\n\t\t</div>\n\t\t<p class=\"major\">\u5DE5\u5546\u7BA1\u7406</p>\n\t</div>\n</div>\n\n<style>\n\th1 {\n\t\tfont-size: 1.5em;\n\t\tfont-weight: bold;\n\t\tletter-spacing: 2px;\n\t\tpadding-bottom: 7px;\n\t\tborder-bottom: 2px double black;\n\t\twidth: 80%;\n\t}\n\n\t.education_info {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tflex-wrap: nowrap;\n\t\tjustify-content: space-between;\n\t\talign-content: center;\n\t\tmargin-top: 30px;\n\t}\n</style>\n\n", "<script>\n\timport Name_card from \"./name_card.svelte\";\n\timport Experience from \"./experience.svelte\";\n\timport Side_project from \"./side_project.svelte\";\n\timport Skills from \"./skills.svelte\";\n\timport Education from \"./education.svelte\";\n</script>\n\n<div class=\"resume\">\n\t<Name_card />\n\t<Experience />\n\t<Side_project />\n\t<Skills />\n\t<Education />\n</div>\n\n<style type=\"text/css\">\n\t.resume {\n\t\tdisplay: block;\n\t\tmargin: auto;\n\t\twidth: 50vw;\n\t\tpadding-bottom: 80px;\n\t}\n</style>\n\n\n\n\n\n", "import App from \"./app.svelte\"\nimport \"../node_modules/tailwindcss/tailwind.css\"\n\nconst app = new App({\n\ttarget: document.body, \n\tprops: {\n\n\t}\n});\n\nexport default app;\n\n"],
  "mappings": ";;AAAA,kBAAgB;AAAA;AAgBhB,eAAa,IAAI;AACb,WAAO;AAAA;AAEX,0BAAwB;AACpB,WAAO,uBAAO,OAAO;AAAA;AAEzB,mBAAiB,KAAK;AAClB,QAAI,QAAQ;AAAA;AAEhB,uBAAqB,OAAO;AACxB,WAAO,OAAO,UAAU;AAAA;AAE5B,0BAAwB,GAAG,GAAG;AAC1B,WAAO,KAAK,IAAI,KAAK,IAAI,MAAM,KAAO,MAAK,OAAO,MAAM,YAAa,OAAO,MAAM;AAAA;AAatF,oBAAkB,KAAK;AACnB,WAAO,OAAO,KAAK,KAAK,WAAW;AAAA;AAqKvC,MAAI,eAAe;AACnB,6BAA2B;AACvB,mBAAe;AAAA;AAEnB,2BAAyB;AACrB,mBAAe;AAAA;AA8FnB,kBAAgB,QAAQ,MAAM;AAC1B,WAAO,YAAY;AAAA;AAoDvB,kBAAgB,QAAQ,MAAM,QAAQ;AAClC,WAAO,aAAa,MAAM,UAAU;AAAA;AAUxC,kBAAgB,MAAM;AAClB,SAAK,WAAW,YAAY;AAAA;AAEhC,wBAAsB,YAAY,WAAW;AACzC,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,UAAI,WAAW;AACX,mBAAW,GAAG,EAAE;AAAA;AAAA;AAG5B,mBAAiB,MAAM;AACnB,WAAO,SAAS,cAAc;AAAA;AAoBlC,gBAAc,MAAM;AAChB,WAAO,SAAS,eAAe;AAAA;AAEnC,mBAAiB;AACb,WAAO,KAAK;AAAA;AAqChB,gBAAc,MAAM,WAAW,OAAO;AAClC,QAAI,SAAS;AACT,WAAK,gBAAgB;AAAA,aAChB,KAAK,aAAa,eAAe;AACtC,WAAK,aAAa,WAAW;AAAA;AA4DrC,oBAAkB,UAAS;AACvB,WAAO,MAAM,KAAK,SAAQ;AAAA;AAwH9B,oBAAkB,OAAM,MAAM;AAC1B,WAAO,KAAK;AACZ,QAAI,MAAK,cAAc;AACnB,YAAK,OAAO;AAAA;AAuTpB,MAAI;AACJ,iCAA+B,WAAW;AACtC,wBAAoB;AAAA;AAwDxB,MAAM,mBAAmB;AAEzB,MAAM,oBAAoB;AAC1B,MAAM,mBAAmB;AACzB,MAAM,kBAAkB;AACxB,MAAM,mBAAmB,QAAQ;AACjC,MAAI,mBAAmB;AACvB,6BAA2B;AACvB,QAAI,CAAC,kBAAkB;AACnB,yBAAmB;AACnB,uBAAiB,KAAK;AAAA;AAAA;AAO9B,+BAA6B,IAAI;AAC7B,qBAAiB,KAAK;AAAA;AAuB1B,MAAM,iBAAiB,oBAAI;AAC3B,MAAI,WAAW;AACf,mBAAiB;AACb,UAAM,kBAAkB;AACxB,OAAG;AAGC,aAAO,WAAW,iBAAiB,QAAQ;AACvC,cAAM,YAAY,iBAAiB;AACnC;AACA,8BAAsB;AACtB,eAAO,UAAU;AAAA;AAErB,4BAAsB;AACtB,uBAAiB,SAAS;AAC1B,iBAAW;AACX,aAAO,kBAAkB;AACrB,0BAAkB;AAItB,eAAS,IAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK,GAAG;AACjD,cAAM,WAAW,iBAAiB;AAClC,YAAI,CAAC,eAAe,IAAI,WAAW;AAE/B,yBAAe,IAAI;AACnB;AAAA;AAAA;AAGR,uBAAiB,SAAS;AAAA,aACrB,iBAAiB;AAC1B,WAAO,gBAAgB,QAAQ;AAC3B,sBAAgB;AAAA;AAEpB,uBAAmB;AACnB,mBAAe;AACf,0BAAsB;AAAA;AAE1B,kBAAgB,IAAI;AAChB,QAAI,GAAG,aAAa,MAAM;AACtB,SAAG;AACH,cAAQ,GAAG;AACX,YAAM,QAAQ,GAAG;AACjB,SAAG,QAAQ,CAAC;AACZ,SAAG,YAAY,GAAG,SAAS,EAAE,GAAG,KAAK;AACrC,SAAG,aAAa,QAAQ;AAAA;AAAA;AAiBhC,MAAM,WAAW,oBAAI;AACrB,MAAI;AACJ,0BAAwB;AACpB,aAAS;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAAA;AAGX,0BAAwB;AACpB,QAAI,CAAC,OAAO,GAAG;AACX,cAAQ,OAAO;AAAA;AAEnB,aAAS,OAAO;AAAA;AAEpB,yBAAuB,OAAO,OAAO;AACjC,QAAI,SAAS,MAAM,GAAG;AAClB,eAAS,OAAO;AAChB,YAAM,EAAE;AAAA;AAAA;AAGhB,0BAAwB,OAAO,OAAO,SAAQ,UAAU;AACpD,QAAI,SAAS,MAAM,GAAG;AAClB,UAAI,SAAS,IAAI;AACb;AACJ,eAAS,IAAI;AACb,aAAO,EAAE,KAAK,MAAM;AAChB,iBAAS,OAAO;AAChB,YAAI,UAAU;AACV,cAAI;AACA,kBAAM,EAAE;AACZ;AAAA;AAAA;AAGR,YAAM,EAAE;AAAA;AAAA;AAuThB,MAAM,UAAW,OAAO,WAAW,cAC7B,SACA,OAAO,eAAe,cAClB,aACA;AAkVV,4BAA0B,OAAO;AAC7B,aAAS,MAAM;AAAA;AAKnB,2BAAyB,WAAW,QAAQ,QAAQ,eAAe;AAC/D,UAAM,EAAE,UAAU,UAAU,YAAY,iBAAiB,UAAU;AACnE,gBAAY,SAAS,EAAE,QAAQ;AAC/B,QAAI,CAAC,eAAe;AAEhB,0BAAoB,MAAM;AACtB,cAAM,iBAAiB,SAAS,IAAI,KAAK,OAAO;AAChD,YAAI,YAAY;AACZ,qBAAW,KAAK,GAAG;AAAA,eAElB;AAGD,kBAAQ;AAAA;AAEZ,kBAAU,GAAG,WAAW;AAAA;AAAA;AAGhC,iBAAa,QAAQ;AAAA;AAEzB,6BAA2B,WAAW,WAAW;AAC7C,UAAM,KAAK,UAAU;AACrB,QAAI,GAAG,aAAa,MAAM;AACtB,cAAQ,GAAG;AACX,SAAG,YAAY,GAAG,SAAS,EAAE;AAG7B,SAAG,aAAa,GAAG,WAAW;AAC9B,SAAG,MAAM;AAAA;AAAA;AAGjB,sBAAoB,WAAW,GAAG;AAC9B,QAAI,UAAU,GAAG,MAAM,OAAO,IAAI;AAC9B,uBAAiB,KAAK;AACtB;AACA,gBAAU,GAAG,MAAM,KAAK;AAAA;AAE5B,cAAU,GAAG,MAAO,IAAI,KAAM,MAAO,KAAM,IAAI;AAAA;AAEnD,gBAAc,WAAW,SAAS,WAAU,kBAAiB,WAAW,OAAO,eAAe,QAAQ,CAAC,KAAK;AACxG,UAAM,mBAAmB;AACzB,0BAAsB;AACtB,UAAM,KAAK,UAAU,KAAK;AAAA,MACtB,UAAU;AAAA,MACV,KAAK;AAAA,MAEL;AAAA,MACA,QAAQ;AAAA,MACR;AAAA,MACA,OAAO;AAAA,MAEP,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,eAAe;AAAA,MACf,eAAe;AAAA,MACf,cAAc;AAAA,MACd,SAAS,IAAI,IAAI,QAAQ,WAAY,oBAAmB,iBAAiB,GAAG,UAAU;AAAA,MAEtF,WAAW;AAAA,MACX;AAAA,MACA,YAAY;AAAA,MACZ,MAAM,QAAQ,UAAU,iBAAiB,GAAG;AAAA;AAEhD,qBAAiB,cAAc,GAAG;AAClC,QAAI,QAAQ;AACZ,OAAG,MAAM,YACH,UAAS,WAAW,QAAQ,SAAS,IAAI,CAAC,GAAG,QAAQ,SAAS;AAC5D,YAAM,QAAQ,KAAK,SAAS,KAAK,KAAK;AACtC,UAAI,GAAG,OAAO,UAAU,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,QAAQ;AACnD,YAAI,CAAC,GAAG,cAAc,GAAG,MAAM;AAC3B,aAAG,MAAM,GAAG;AAChB,YAAI;AACA,qBAAW,WAAW;AAAA;AAE9B,aAAO;AAAA,SAET;AACN,OAAG;AACH,YAAQ;AACR,YAAQ,GAAG;AAEX,OAAG,WAAW,mBAAkB,iBAAgB,GAAG,OAAO;AAC1D,QAAI,QAAQ,QAAQ;AAChB,UAAI,QAAQ,SAAS;AACjB;AACA,cAAM,QAAQ,SAAS,QAAQ;AAE/B,WAAG,YAAY,GAAG,SAAS,EAAE;AAC7B,cAAM,QAAQ;AAAA,aAEb;AAED,WAAG,YAAY,GAAG,SAAS;AAAA;AAE/B,UAAI,QAAQ;AACR,sBAAc,UAAU,GAAG;AAC/B,sBAAgB,WAAW,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ;AACnE;AACA;AAAA;AAEJ,0BAAsB;AAAA;AAE1B,MAAI;AACJ,MAAI,OAAO,gBAAgB,YAAY;AACnC,oBAAgB,cAAc,YAAY;AAAA,MACtC,cAAc;AACV;AACA,aAAK,aAAa,EAAE,MAAM;AAAA;AAAA,MAE9B,oBAAoB;AAChB,cAAM,EAAE,aAAa,KAAK;AAC1B,aAAK,GAAG,gBAAgB,SAAS,IAAI,KAAK,OAAO;AAEjD,mBAAW,OAAO,KAAK,GAAG,SAAS;AAE/B,eAAK,YAAY,KAAK,GAAG,QAAQ;AAAA;AAAA;AAAA,MAGzC,yBAAyB,OAAM,WAAW,UAAU;AAChD,aAAK,SAAQ;AAAA;AAAA,MAEjB,uBAAuB;AACnB,gBAAQ,KAAK,GAAG;AAAA;AAAA,MAEpB,WAAW;AACP,0BAAkB,MAAM;AACxB,aAAK,WAAW;AAAA;AAAA,MAEpB,IAAI,MAAM,UAAU;AAEhB,cAAM,YAAa,KAAK,GAAG,UAAU,SAAU,MAAK,GAAG,UAAU,QAAQ;AACzE,kBAAU,KAAK;AACf,eAAO,MAAM;AACT,gBAAM,QAAQ,UAAU,QAAQ;AAChC,cAAI,UAAU;AACV,sBAAU,OAAO,OAAO;AAAA;AAAA;AAAA,MAGpC,KAAK,SAAS;AACV,YAAI,KAAK,SAAS,CAAC,SAAS,UAAU;AAClC,eAAK,GAAG,aAAa;AACrB,eAAK,MAAM;AACX,eAAK,GAAG,aAAa;AAAA;AAAA;AAAA;AAAA;AAQrC,8BAAsB;AAAA,IAClB,WAAW;AACP,wBAAkB,MAAM;AACxB,WAAK,WAAW;AAAA;AAAA,IAEpB,IAAI,MAAM,UAAU;AAChB,YAAM,YAAa,KAAK,GAAG,UAAU,SAAU,MAAK,GAAG,UAAU,QAAQ;AACzE,gBAAU,KAAK;AACf,aAAO,MAAM;AACT,cAAM,QAAQ,UAAU,QAAQ;AAChC,YAAI,UAAU;AACV,oBAAU,OAAO,OAAO;AAAA;AAAA;AAAA,IAGpC,KAAK,SAAS;AACV,UAAI,KAAK,SAAS,CAAC,SAAS,UAAU;AAClC,aAAK,GAAG,aAAa;AACrB,aAAK,MAAM;AACX,aAAK,GAAG,aAAa;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACz6DjC,eAYM,QAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBCL8B,IAAO,GAAC,sBAAmB;;;;;;;;;;;;AAD5D,eAAe,QAAA,MAAA;;AACf,eAAkE,QAAA,GAAA;;;;kDAAjC,KAAO,GAAC,sBAAmB;AAAA,mBAAA,IAAA;;;;;;;;;;;;;;kBAIlC,IAAW,KAAA;;;;;;;;;AAApC,eAA0C,QAAA,GAAA;;;;gDAAjB,KAAW,KAAA;AAAA,mBAAA,GAAA;;;;;;;;;;;;mBAPT,IAAO,GAAC,eAAY;;;;;mBAC5C,IAAO,GAAC,uBAAmB,gBAAA;qBAKxB,IAAO,GAAC;;mCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;AART,eAaM,QAAA,MAAA;AAZL,eAWM,MAAA;AAVL,eAA0D,MAAA;;;;;;AAK1D,eAIK,MAAA;;;;;;kDATwB,KAAO,GAAC,eAAY;AAAA,mBAAA,IAAA;YAC5C,KAAO,GAAC,qBAAmB;;;;;;;;;;;;;uBAKxB,KAAO,GAAC;;qCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;0CAAJ;;;;;;;;;;;;;;;UAXO,YAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sDC4FI,IAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAXC,IAAI,KAAA;;;;;;mBAEN,IAAE,KAAA;;;;;mBAGW,IAAO,GAAC,eAAY;;;;;mBAEpC,IAAQ,KAAA;;;;;;uBAGvB,IAAQ;;qCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCALM,IAAO,GAAC;;;;;;;;AARtB,eAiBM,QAAA,MAAA;AAhBL,eAUM,MAAA;AATL,eAII,MAAA;AAHH,eAAuC,IAAA;;;AACvC,eAAkB,IAAA;;AAClB,eAAmC,IAAA;;;AAEpC,eAEM,MAAA;AADL,eAA+D,MAAA;;;AAEhE,eAAoC,MAAA;;;AAErC,eAIM,MAAA;;;;;;;;;yBAHE,KAAQ;;uCAAb,QAAI,KAAA,GAAA;;;;;;;;;;;;;gCAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;yCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;qBAdF,IAAW;;mCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;AAFP,eAAa,QAAA,IAAA;;AACb,eAqBM,QAAA,KAAA;;;;;;;;uBApBE,KAAW;;qCAAhB,QAAI,KAAA,GAAA;;;;;;;;;;;;;8BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;uCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;;;;QA1EF,cAAW;;QAEb,QAAQ;QACR,MAAM;QACN,WAAS;UACR,gBAAgB;UAChB,gBAAgB;;QAEjB,YAAY;QACZ,YAAU;;YAER,gBAAgB;YAChB,gBAAc;cACb;cACA;cACA;;;;YAID,gBAAgB;YAChB,uBAAuB;YACvB,gBAAc;cACb;cACA;cACA;cACA;cACA;;;;YAID,gBAAgB;YAChB,gBAAc;cACb;cACA;;;;;;QAMH,QAAQ;QACR,MAAM;QACN,WAAS;UACR,gBAAgB;UAChB,gBAAgB;;QAEjB,YAAY;QACZ,YAAU;;YAER,gBAAgB;YAChB,uBAAuB;YACvB,gBAAc;cACb;cACA;cACA;cACA;cACA;;;;YAID,gBAAgB;YAChB,uBAAuB;YACvB,gBAAc;cACb;cACA;;;;;;;;;;;;;;;;;;;;;;;;;;wBCzCe,IAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBADzB,IAAa;;mCAAlB,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;AAFP,eAKM,QAAA,KAAA;AAJL,eAA4B,KAAA;;;;;;;;;uBACrB,KAAa;;qCAAlB,QAAI,KAAA,GAAA;;;;;;;;;;;;;8BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;uCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;QAtBF,gBAAa;;QAEf,gBAAgB;QAChB,uBAAuB;QACvB,gBAAc;UACb;UACA;UACA;UACA;UACA;;;;QAID,gBAAgB;QAChB,uBAAuB;QACvB,gBAAc;;;;;;;;;;;;;;;;;;;;;kBCTM,IAAK,KAAA;;;;;;;;;AAAzB,eAAgC,QAAA,IAAA;;;;gDAAZ,KAAK,KAAA;AAAA,mBAAA,GAAA;;;;;;;;;;;mBAHA,IAAK,GAAC,oBAAiB;;;;qBAE1C,IAAK,GAAC;;mCAAX,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;AAHR,eAOM,QAAA,MAAA;AANL,eAA0D,MAAA;;;AAC1D,eAIK,MAAA;;;;;;kDALsB,KAAK,GAAC,oBAAiB;AAAA,mBAAA,IAAA;;uBAE1C,KAAK,GAAC;;qCAAX,QAAI,KAAA,GAAA;;;;;;;;;;;;;0CAAJ;;;;;;;;;;;;;UANQ,UAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmFd,eAEK,QAAA,IAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAHC,IAAM;;mCAAX,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;;AAHR,eASM,QAAA,KAAA;AARL,eAAa,KAAA;;AACb,eAMK,KAAA;;;;;;;;uBALG,KAAM;;qCAAX,QAAI,KAAA,GAAA;;;;;;;;;;;;;8BAAJ,QAAI,IAAA,YAAA,QAAA,KAAA,GAAA;;;;;;;;;uCAAJ,QAAI,KAAA,GAAA;;;;;;;;;;;;;;;;;;;;QAhFH,SAAM;;QAER,qBAAqB;QACrB,gBAAc,CACb,iBACA,SACA;;;QAID,qBAAqB;QACrB,gBAAc,CACb,QACA,QACA;;;QAID,qBAAqB;QACrB,gBAAc,CACb,SACA,SACA,UACA;;;QAID,qBAAqB;QACrB,gBAAc,CACb,UACA;;;QAID,qBAAqB;QACrB,gBAAc;UACb;UACA;UACA;UACA;UACA;UACA;;;;QAiBD,qBAAqB;QAErB,gBAAc,CACb,SACA,QACA,UACA,yBACA,SACA;;;QAID,qBAAqB;QACrB,gBAAc,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EpB,eAWM,QAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJN,eAMM,QAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXN,MAAM,MAAM,IAAI,YAAI;AAAA,IACnB,QAAQ,SAAS;AAAA,IACjB,OAAO;AAAA;AAKR,MAAO,cAAQ;",
  "names": []
}
